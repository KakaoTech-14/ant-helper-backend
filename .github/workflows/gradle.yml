# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: CI/CD Pipeline

on:
  push:
    branches: ["main"]

permissions:
  contents: read

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      working-directory: backend

    - name: Create application-db.properties
      run: echo "${{ secrets.DB_PROPERTIES }}" > backend/src/main/resources/application-db.properties

    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2.6.0
      with:
        arguments: clean build -x test
        working-directory: backend

    - name: Upload build artifact
      uses: actions/upload-artifact@v2
      with:
        name: backend-jar
        path: backend/build/libs/backend-0.0.1-SNAPSHOT.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download build artifact
      uses: actions/download-artifact@v2
      with:
        name: backend-jar
        path: backend/build/libs/

    - name: Deploy to EC2
      run: |
        echo "${{ secrets.EC2_KEY }}" > private_key.pem
        chmod 600 private_key.pem
        scp -i private_key.pem -o StrictHostKeyChecking=no backend/build/libs/backend-0.0.1-SNAPSHOT.jar ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/backend.jar
        ssh -i private_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "pgrep java | xargs kill -9; nohup java -jar /home/${{ secrets.EC2_USER }}/backend.jar > app.log 2>&1 &"
        rm -f private_key.pem

name: CI/CD Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Deploy and Build on EC2 via SSH
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
        EC2_KEY: ${{ secrets.EC2_KEY }}
      run: |
        echo "${{ secrets.EC2_KEY }}" > key.pem
        chmod 400 key.pem

        # backend 디렉터리만 EC2로 전송
        scp -o StrictHostKeyChecking=no -i key.pem -r backend $EC2_USER@$EC2_HOST:/home/$EC2_USER/project/

        # EC2에 접속하여 빌드 및 실행
        ssh -o StrictHostKeyChecking=no -i key.pem $EC2_USER@$EC2_HOST << 'EOF'
          sudo apt-get update
          sudo apt-get install openjdk-17-jdk -y
          sudo apt-get install gradle -y
          cd /home/$EC2_USER/project/backend
          ./gradlew clean build
          pkill -f 'java -jar build/libs/backend-0.0.1-SNAPSHOT.jar' || true
          nohup java -jar build/libs/backend-0.0.1-SNAPSHOT.jar > /home/$EC2_USER/nohup.out 2>&1 &
        EOF
        rm key.pem
